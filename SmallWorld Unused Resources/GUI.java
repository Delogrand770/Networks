package Unused;


import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author C14Gavin.Delphia
 */
public class GUI extends javax.swing.JFrame {

    public static TCPClient client = null;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        centerWindow();
    }

    //http://www.java-forums.org/awt-swing/3491-jframe-center-screen.html
    public final void centerWindow() {
        // Get the size of the screen
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        // Determine the new location of the window
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;

        // Move the window
        this.setLocation(x, y);
    }

    public void sendChat() {
        String msg = chat_box.getText().trim();
        if (!msg.isEmpty()) {
            client.chat(msg);
            chat_box.setText("");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewPort = new javax.swing.JPanel();
        chat_box = new javax.swing.JTextField();
        chat_send = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Small World Client");
        setResizable(false);

        chat_box.setToolTipText("");
        chat_box.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                chat_boxKeyPressed(evt);
            }
        });

        chat_send.setText("Send");
        chat_send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chat_sendMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout viewPortLayout = new javax.swing.GroupLayout(viewPort);
        viewPort.setLayout(viewPortLayout);
        viewPortLayout.setHorizontalGroup(
            viewPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chat_box, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chat_send)
                .addContainerGap())
        );
        viewPortLayout.setVerticalGroup(
            viewPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPortLayout.createSequentialGroup()
                .addContainerGap(452, Short.MAX_VALUE)
                .addGroup(viewPortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chat_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chat_send))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(viewPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(viewPort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chat_sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chat_sendMouseClicked
        sendChat();
    }//GEN-LAST:event_chat_sendMouseClicked

    private void chat_boxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chat_boxKeyPressed
        //System.out.println(evt.getKeyCode());
        int enterKey = 10;
        if (evt.getKeyCode() == enterKey) {
            sendChat();
        }
    }//GEN-LAST:event_chat_boxKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        GUI myGUI = new GUI();
        myGUI.setVisible(true);


        //Get command line arguments that will specify the ip and port
        final String servName = (args.length > 1 && args[1] != null)
                ? args[1] : "128.236.40.20"; //SmallWorld Server
        final int servPort = (args.length > 2 && args[2] != null && Integer.parseInt(args[2]) > 0)
                ? Integer.parseInt(args[2]) : 12345;

        System.out.print("Attempting TCP client connnection to " + servName + " on port " + servPort + " ... ");
        //Create the TCP client
        try {
            client = new TCPClient(servName, servPort);//Create/Start the thread on the TCP client
            Thread listen = new Thread(client);
            listen.start();

            System.out.println("SUCCESS");
            client.login("Gavin.Delphia", "4zPWkt");
            client.revive();
            client.stat();


        } catch (Exception e) {
            JOptionPane.showMessageDialog(myGUI, "The server " + servName + ":" + servPort + " cannot be reached at this time.", myGUI.getTitle(), 0);
            myGUI.dispose();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chat_box;
    private javax.swing.JButton chat_send;
    private javax.swing.JPanel viewPort;
    // End of variables declaration//GEN-END:variables
}
